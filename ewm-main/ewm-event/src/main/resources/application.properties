# id приложения - желательно указывать всегда в микросервисных приложениях
spring.application.name=ewm-event
app.name=ewm-main-service
spring.config.import=optional:configserver:http://localhost:8888
spring.main.allow-bean-definition-overriding=true
spring.profiles.active=micro,db,rabbit
spring.liquibase.enabled=true
#, db
db.name=ewm_event
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.properties.hibernate.format_sql=true
# настройки каналов для всех клиентов
spring.cloud.function.definition=changeStatusRequestsProduce;newEventFromUserProduce
spring.cloud.stream.bindings.changeStatusRequestsProduce-out-0.destination=ewmc-req
spring.cloud.stream.bindings.newEventFromUserProduce-out-0.destination=ewmc-event
reaml.id=ewm-app-realm
resource-server.uri=http://localhost:8181/realms/${reaml.id}/protocol/openid-connect
#ссылка на сертификаты auth server для проверки целостности access token
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/ewm-app-realm/protocol/openid-connect/certs
spring.cloud.openfeign.oauth2.enabled=true
#-----------------------------------------------------------------------------------------
spring.cloud.openfeign.oauth2.clientRegistrationId=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=ewm-app-client
spring.security.oauth2.client.registration.keycloak.client-secret=aaUxcYHuVbZ5Jk6Nhe5VTRCsqEKB6e2T
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8181/realms/ewm-app-realm/protocol/openid-connect/token